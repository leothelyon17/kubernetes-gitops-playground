service:
  # -- (`ExternalName`, `ClusterIP`, `NodePort`, or `LoadBalancer`) [[ref](https://kubernetes.io/docs/concepts/services-networking/service/)] Kubernetes service type, valid values: `ExternalName`, `ClusterIP`, `NodePort`, or `LoadBalancer`
  type: "NodePort"
  # -- Port to expose for Nautobot http access
  port: 80
  # -- Port to expose for Nautobot https access
  httpsPort: 443
  # Node ports to expose if service.type is NodePort
  nodePorts:
    # -- (int) Node port for Nautobot http choose port in Kubernetes `--service-node-port-range` typically 30000-32767
    http:  31080
    # -- (int) Node port for Nautobot https choose port in Kubernetes `--service-node-port-range` typically 30000-32767
    https:  31443
    # -- (int) Node port for Nautobot uwsgimetrics choose port in Kubernetes `--service-node-port-range` typically 30000-32767

# nautobot:
#   db:
#     # -- Name of existing secret to use for Database passwords<sup>[1](#notes)</sup>
#     existingSecret: "nautobot-test-secrets"
#     # -- Password key to be retrieved from existing secret<sup>[1](#notes)</sup>
#     existingSecretPasswordKey: "password"
  
#   redis:
#     # -- Name of existing secret to use for Redis passwords<sup>[1](#notes)</sup>
#     existingSecret: "nautobot-test-secrets"
#     # -- Password key to be retrieved from existing secret<sup>[1](#notes)</sup>
#     existingSecretPasswordKey: "redis-password"

postgresql:
  primary:
    persistence:
      enabled: true
      size: "5Gi"
      storageClass: "rook-cephfs"
      accessModes: ['ReadWriteOnce']
  auth:
    #password: "nautobot-postgres-pass"
    existingSecret: nautobot-test-secrets
    #usernameKey: POSTGRES_USER
    #passwordKey: POSTGRES_PASSWORD

redis:
  master:
    persistence:
      enabled: true
      size: "1Gi"
      storageClass: "rook-cephfs"
      accessModes: ['ReadWriteOnce']
  auth:
    enabled: true
    existingSecret: nautobot-test-secrets
    #usernameKey: REDIS_USER
    #passwordKey: REDIS_PASSWORD
    #password: "nautobot-redis-pass"
