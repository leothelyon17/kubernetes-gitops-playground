nautobot:
  image:
    registry: ghcr.io
    repository: ghcr.io/leothelyon17/kubernetes-gitops-playground/nautobot/dev
    pullPolicy: Always
    tag: "latest"
    pullSecrets:
      - net-automation-k8s-repo-credentials

  command:
    - /bin/sh
    - -c
    - |
      cp /tmp/nautobot_config.py /opt/nautobot/nautobot_config.py && \
      nautobot-server post_upgrade && \
      nautobot-server start --ini /opt/nautobot/uwsgi.ini

  replicaCount: 1

  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false

  initContainers:
    - name: git-fetch
      image: alpine/git
      command:
        - /bin/sh
        - -c
        - |
          git clone https://github.com/leothelyon17/kubernetes-gitops-playground.git /tmp \
          && cp /tmp/apps/nautobot/overlays/prod/configuration/nautobot_config.py /shared-volume/
      volumeMounts:
        - name: shared-volume
          mountPath: /shared-volume

  extraVolumes:
    - name: shared-volume
      emptyDir: {}

  extraVolumeMounts:
    - name: shared-volume
      mountPath: /tmp

  superUser:
      existingSecret: "nautobot-prod-superuser-secrets"
      existingSecretPasswordKey: "password"
      existingSecretApiTokenKey: "api_token"
      username: "jeff"

celery:
  replicaCount: 1

  command:
    - /bin/sh
    - -c
    - |
      cp /tmp/nautobot_config.py /opt/nautobot/nautobot_config.py && \
      nautobot-server post_upgrade && \
      nautobot-server celery worker --loglevel $(NAUTOBOT_LOG_LEVEL) --queues $(CELERY_TASK_QUEUES) --events

  initContainers:
    - name: git-fetch
      image: alpine/git
      command:
        - /bin/sh
        - -c
        - |
          git clone https://github.com/leothelyon17/kubernetes-gitops-playground.git /tmp \
          && cp /tmp/apps/nautobot/overlays/prod/configuration/nautobot_config.py /shared-volume/
      volumeMounts:
        - name: shared-volume
          mountPath: /shared-volume

  extraVolumes:
    - name: shared-volume
      emptyDir: {}

  extraVolumeMounts:
    - name: shared-volume
      mountPath: /tmp

postgresql:
  primary:
    persistence:
      enabled: true
      size: "2Gi"
      storageClass: "rook-cephfs-retain"
      accessModes: ['ReadWriteOnce']
  auth:
    existingSecret: nautobot-prod-db-secrets

redis:
  master:
    persistence:
      enabled: true
      size: "1Gi"
      storageClass: "rook-cephfs-delete"
      accessModes: ['ReadWriteOnce']
  auth:
    enabled: true
    existingSecret: nautobot-prod-db-secrets
