name: Setup and Test Kubernetes Access

on:
  #push:
  #  branches:
  #    - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Install kubectl if not present
    - name: Install kubectl
      run: |
        if ! command -v kubectl &> /dev/null; then
          echo "kubectl not found, installing..."
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
        else
          echo "kubectl already installed."
        fi
        kubectl version --client
    
    - name: Combine and decode kubeconfigs
      run: |
        mkdir -p $HOME/.kube
        combined_config=$HOME/.kube/config
        
        # Fetch the list of environments using GitHub API
        response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/environments")
        
        # Extract environment names and store them in a list
        environments=$(echo "$response" | jq -r '.environments[].name')

        for environment in $environments; do
          echo "Processing environment: $environment"
          # Check if the secret exists
          if [ -n "${{ secrets.KUBECONFIG_BASE64 }}" ]; then
            echo "Found KUBECONFIG_BASE64 secret for $environment"

            # Decode the secret and append it to the combined kubeconfig
            echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 --decode > $HOME/.kube/$environment.yaml
            KUBECONFIG=$KUBECONFIG:$HOME/.kube/$environment.yaml
          else
            echo "No KUBECONFIG_BASE64 secret found for $environment"
          fi
        done

        # Flatten the combined kubeconfig
        KUBECONFIG=$KUBECONFIG kubectl config view --flatten > $combined_config
        chmod 600 $combined_config
        echo "Combined kubeconfig saved to $combined_config"
        done
    
    - name: Verify Kubeconfig
      run: |
        kubectl config get-contexts
        kubectl version
        kubectl get nodes
