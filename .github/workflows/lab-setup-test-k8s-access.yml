name: Setup and Test Kubernetes Access

on:
  #push:
  #  branches:
  #    - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Install kubectl if not present
    - name: Install kubectl
      run: |
        if ! command -v kubectl &> /dev/null; then
          echo "kubectl not found, installing..."
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
        else
          echo "kubectl already installed."
        fi
        kubectl version --client
    
    - name: Combine and decode kubeconfigs
      run: |
        # Fetch the list of environments using GitHub API
        response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/environments")
        
        # Extract environment names and store them in a list
        environments=$(echo "$response" | jq -r '.environments[].name')
        
        # Save the list as a GitHub Actions output
        echo environment=$environments >> $GITHUB_ENV
    
    #   env:
    #     KUBE_CONFIG_1: ${{ secrets.KUBECONFIG_BASE64_PROD }}
    #     KUBE_CONFIG_2: ${{ secrets.KUBECONFIG_BASE64_LAB }}
    #   run: |
    #     # Decode the first config and append it to the kube config
    #     echo "$KUBE_CONFIG_1" | base64 --decode > $HOME/.kube/config1.yaml
    #     # Decode the second config and append it to the kube config
    #     echo "$KUBE_CONFIG_2" | base64 --decode > $HOME/.kube/config2.yaml
        
    #     # Combine both config files into the .kube/config
    #     KUBECONFIG=$HOME/.kube/config1.yaml:$HOME/.kube/config2.yaml kubectl config view --flatten > $HOME/.kube/config
    #     chmod 600 $HOME/.kube/config

    - name: Verify Kubeconfig
      run: |
        kubectl config get-contexts
        kubectl version
        kubectl get nodes
