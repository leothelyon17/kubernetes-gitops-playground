name: Setup and Test Kubernetes Access

on:
  #push:
  #  branches:
  #    - main
  workflow_dispatch:

jobs:
  install-kubectl:
    runs-on: self-hosted

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Install kubectl if not present
    - name: Install kubectl
      run: |
        if ! command -v kubectl &> /dev/null; then
          echo "kubectl not found, installing..."
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
        else
          echo "kubectl already installed."
        fi
        kubectl version --client
    
  deploy:
    runs-on: self-hosted

    strategy:
      matrix:
        environment: ["lab", "prod"]
      fail-fast: false

    steps:
    - name: Set up directories
      run: |
        mkdir -p $HOME/.kube
        echo "Kube config directory created at $HOME/.kube"

    - name: Combine and decode kubeconfigs
      env:
        ENVIRONMENT: ${{ matrix.environment }}
      run: |
        kubeconfig_path="$HOME/.kube/${{ matrix.environment }}.yaml"
        
        echo "Processing environment: $ENVIRONMENT"

        # Check if the secret exists
        if [[ -n "${{ secrets.KUBECONFIG_BASE64 }}" ]]; then
          echo "Found KUBECONFIG_BASE64 secret for $ENVIRONMENT"

          # Decode the secret and save it as a kubeconfig file
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 --decode > "$kubeconfig_path"
          echo "Kubeconfig for $ENVIRONMENT saved at $kubeconfig_path"
        else
          echo "No KUBECONFIG_BASE64 secret found for $ENVIRONMENT"
        fi

        # # Flatten the combined kubeconfig
        # KUBECONFIG=$KUBECONFIG kubectl config view --flatten > $combined_config
        # chmod 600 $combined_config
        # echo "Combined kubeconfig saved to $combined_config"
    
    - name: Verify Kubeconfig
      run: |
        kubectl config get-contexts
        kubectl version
        kubectl get nodes
